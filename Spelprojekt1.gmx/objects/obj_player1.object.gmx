<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Egna variabler för gravitation, vspeed och hspeed, istället för att använda de inbyggda
grav = 0;
vspd = 0;
hspd = 0;
globalvar touchL1;
touchL1 = false;
globalvar touchR1;
touchR1 = false;

health = 1000
ladder = false;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
 speed += 8
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement
// two_object_view(obj_player2,0)
if place_meeting(x -5,y,obj_viewL)
{
touchL1 = true
}
else if place_meeting(x +5,y,obj_viewR)
{
touchR1 = true
}
else
{
touchL1 = false
touchR1 = false
}
if !place_meeting(x,y+1,obj_block) // Om vi är i luften dvs. det finns inget block under oss
{
    grav = .5; // Sätt gravity to .5
    vspd += grav; // Addera .5 till vår vspd varje
    sprite_index = spr_player1 //Hopp-spriten
}
else // Om vi är på marken
{
    grav = 0; // Sätt gravity till 0
    vspd = 0; // Sätt vspd till 0 så vi slutar falla
    if keyboard_check_pressed(vk_up) // Eftersom vi här VET att vi är på marken kan vi passa på att hantera hopp-funkionen här
    {
        vspd = -8; // Sätt vspd till -8 för att falla uppåt (hoppa)
    }
}


if keyboard_check_released(vk_up) // Om vi släpper hoppknappen medan vi är i luften
{vspd *= .5;} // dividera vår vspd med 2 för att skapa en mjukare form av hopp

if vspd &gt; 8 // För att inte falla för snabbt kollar vi vår hastighet
{vspd = 8;} // och ser till att den inte går över maxvärdet

repeat(abs(vspd)) // Vi vill undersöka om det sker en kollision mellan spelare och block för varje pixel, därför använder vi repeat() för att kolla varje pixel medan vi faller
{
    if !place_meeting(x,y+sign(vspd),obj_block) // vspd kan vara både negativ och positiv, därför kollar vi 1 pixel ovanför eller under spelaren, beroende vilken riktning vi rör oss
    {
        y += sign(vspd); // Genom att ändra vårt y-värde 1 pixel åt gången får vi en mycket exakt kollisionshanterare
    }
    else // men om vi stöter i ett block
    {
        vspd = 0; // slutar vi röra oss vertikalt
    }
}
hspd = (keyboard_check(vk_right)-keyboard_check(vk_left))*4; // En smidig lösning för horizontal förflyttning är att använda det faktum att keyboard_check retunerar '1' då tangenten trycks ner, genom att mulitplicera det med den hastighet vi vill ha kan vi på så sätt förflytta oss väldigt enkelt
repeat(abs(hspd)) // Samma som för vspd, vi kollar återigen 1 pixel åt gången
{
    if !place_meeting(x+sign(hspd),y,obj_block) // Om det inte är något block åt det håll vi är påväg
    {
        if keyboard_check(vk_right) &amp;&amp; touchL2 == false
        {
        x += sign(hspd); // ändrar vi vårt x-värde
        }
        else if keyboard_check(vk_left) &amp;&amp; touchR2 == false
        {
        x += sign(hspd); // ändrar vi vårt x-värde
        }
    }
}

if keyboard_check(vk_right)
    {
    image_xscale = -1;
    }
    else if keyboard_check(vk_left)
    {
    image_xscale = 1;
    }
    
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Health

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Ladder

if (keyboard_check(vk_up) || keyboard_check(vk_down))
{
    if place_meeting(x, y, obj_ladder) ladder = true;
}

if(ladder)
{
    vspd = 0;
    grav = 0;
    if (keyboard_check(vk_up)) vspd = -5;
    if (keyboard_check(vk_down)) vspd = 5;
    if (!place_meeting(x,y,obj_ladder)) ladder = false;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///För att spelaren inte ska knockbackas in i väggen
    if place_meeting(x,y,obj_block)
       {
       x+=4
       }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_ooze">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
speed = -8;
alarm[0] = 5;

if place_meeting(x-1,y,obj_block)
speed = 0;
*/

if !place_meeting(x-8,y,obj_block) // Om det inte är något block åt det håll vi är påväg
    {
       // x -= 3; // ändrar vi vårt x-värde
       speed = -8;
       alarm[0] = 5;
       
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();
draw_healthbar(view_xview[0]+840, view_yview[0]+5, view_xview[0]+940, view_yview[0]+20, health, c_black, c_red, c_green, 1, true, true);
draw_text(view_xview[0]+840, view_yview[0]+5, string(health) + "/1000");
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>0,0</point>
    <point>16,16</point>
  </PhysicsShapePoints>
</object>
